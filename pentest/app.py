# Import the required functionality from Flask:
from flask import Flask, render_template, request

# Import the tool we plan to use:
from pythonping import ping

# Create a Flask webapp:
app = Flask(__name__)

# The webapp's default page (URL: /) returns the home page. We tell
# Flask what to do by associating the route "/" with a function, called
# "index" here. The returned web page contains a simple <form>:
@app.route("/")
def index():
    # This call grabs a HTML file from the "templates" folder and
    # returns it to the browser:
    return render_template("index.html")


# The webapp's <form> sends its data to here (URL: /process) when
# the user clicks on the submit button. Note that this code expects
# data to be POSTED to it. Again, Flask associates the "/process"
# route with a function, called "process_ping" here:
@app.route("/process", methods=["POST"])
def process_ping():
    # This next line grabs the entered IP address from the form:
    ip_addr = request.form["ip_address"]
    # We send the IP address to pythonping's ping routing, and
    # the results get put into a variable called "data":
    data = ping(ip_addr)
    # We send the data to another webpage, which processes it for
    # display:
    return render_template("results.html", the_data=data)


# These two lines start the webapp from the command-line:
if __name__ == "__main__":
    app.run()
